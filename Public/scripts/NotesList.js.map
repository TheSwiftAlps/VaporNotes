{"version":3,"file":"NotesList.js","sourceRoot":"","sources":["NotesList.ts"],"names":[],"mappings":"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","sourcesContent":["import \"NotesListDelegate\";\n\nexport class NotesList {\n    public delegate: NotesListDelegate = null;\n    private _notesDiv;\n\n    constructor() {\n        this._notesDiv = $('#notesDiv');\n    }\n\n    show(): void {\n        this._notesDiv.show();\n    }\n\n    hide(): void {\n        this._notesDiv.hide();\n    }\n\n    empty(): void {\n        this._notesDiv.empty();\n    }\n\n    writeEmptyMessage(): void {\n        let p = $(\"<p>No notes. Click \\\"create note\\\" to write one.</p>\");\n        this._notesDiv.append(p);\n    }\n\n    displayNotes(notes): void {\n        this._notesDiv.empty();\n        if (notes.length == 0) {\n            this.writeEmptyMessage();\n            return;\n        }\n        for (let note of notes) {\n            let p = $(\"<p>\");\n            let editButton = $('<input type=\"button\" value=\"edit\">');\n            editButton.bind('click', () => {\n                this.delegate.onEditNote(note);\n            });\n            let deleteButton = $('<input type=\"button\" value=\"delete\">');\n            deleteButton.bind('click', () => {\n                let ok = confirm(\"Are you sure?\");\n                if (ok) {\n                    this.delegate.onDeleteNote(note);\n                }\n            });\n            p.append(editButton);\n            p.append(\"&nbsp;\");\n            if (note.published) {\n                let a = $('<a target=\"_blank\" href=\"/' + note.slug + '\">' + note.title + '</a>');\n                let unpublishButton = $('<input type=\"button\" value=\"unpublish\">');\n                unpublishButton.bind('click', () => {\n                    this.delegate.onUnpublishNote(note);\n                });\n                p.append(a);\n                p.append(\"&nbsp;\");\n                p.append(unpublishButton);\n            }\n            else {\n                p.append(note.title);\n                let publishButton = $('<input type=\"button\" value=\"publish\">');\n                publishButton.bind('click', () => {\n                    this.delegate.onPublishNote(note);\n                });\n                p.append(\"&nbsp;\");\n                p.append(publishButton);\n            }\n            p.append(\"&nbsp;\");\n            p.append(deleteButton);\n            this._notesDiv.append(p);\n        }\n    }\n}\n"]}